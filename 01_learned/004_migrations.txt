to run your created migrations (for db and test db)

  bundle exec rails db:migrate db:test:prepare

if you are in development and want to have your tables empty

  bundle exec rails db:drop db:create db:migrate # CAREFUL!!! will destroy all records of data in all tables

migrations done

  bundle exec rails g migration add_username_to_users username:string

  bundle exec rails g migration add_display_name_to_users display_name:string

  bundle exec rails g model like tweet:references user:references

  bundle exec rails g model Bookmark user:references tweet:references

    and add to the migration index unique for combination of references (a user can only bookmark the same tweet once)

  bundle exec rails g model retweet user:references tweet:references

  bundle exec rails g migration add_retweets_count_to_tweets retweets_count:integer

  bundle exec rails g migration add_parent_tweet_id_to_tweets tweet_id:bigint
    notice we add a tweet_id as bigint to be consistent with the tweet_id that is already in our tables (is bigint/int8 already)

  bundle exec rails g migration add_bio_to_users bio:text
    in larger apps bio should be added to another table called profiles
      this way the core user data can be accessed quicker and the less frequently accessed potentially larger profile data stays also organized
        querying the user data this way will be faster

  bundle exec rails g migration add_location_to_users location:string

  bundle exec rails g migration add_url_to_users url:string

  bundle exec rails g migration add_reply_tweets_count_to_tweets reply_tweets:integer

  bundle exec rails g model hashtag tag:string

  bundle exec rails g migration create_hashtags_tweets_table

  bundle exec rails g migration add_index_to_tag_column_on_hashtags
